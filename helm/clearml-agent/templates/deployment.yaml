apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "clearml-agent.fullname" . }}
  labels:
    {{- include "clearml-agent.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "clearml-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "clearml-agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "clearml-agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: copy-clearml-conf
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "alpine:3.15"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - cp
          args:
          - /clearml/clearml.conf
          - $(HOME_DIR)
          env:
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          {{- if .Values.env }}
          {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.envFromSecrets }}
          {{- range $key, $val := .Values.envFromSecrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .key }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: home-dir
            mountPath: "{{ required ".Values.env.HOME_DIR" .Values.env.HOME_DIR }}"
          - name: clearml-conf
            mountPath: /clearml
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.workingDir }}
          workingDir: {{ .Values.workingDir }}
          {{- end }}
          {{- if .Values.command }}
          command:
          {{- range .Values.command }}
            - {{ . }}
          {{- end }}
          {{- end }}
          {{- if .Values.args }}
          args:
          {{- range .Values.args }}
            - {{ . }}
          {{- end }}
          {{- end }}
          env:
            - name: CLEARML_API_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "clearml-agent.fullname" . }}
                  key: api-access-key
            - name: CLEARML_API_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "clearml-agent.fullname" . }}
                  key: api-secret-key
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          {{- if .Values.env }}
          {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.envFromSecrets }}
          {{- range $key, $val := .Values.envFromSecrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .key }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config
            mountPath: "/config"
          - name: home-dir
            mountPath: "{{ required ".Values.env.HOME_DIR" .Values.env.HOME_DIR }}"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "clearml-agent.fullname" . }}
        - name: home-dir
          emptyDir: {}
        - name: clearml-conf
          configMap:
            name: {{ include "clearml-agent.fullname" . }}-clearml-conf
            items:
              - key: clearml.conf
                path: clearml.conf